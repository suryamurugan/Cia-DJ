# Generated by Django 2.0.10 on 2020-02-04 11:46

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phone_field.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('u_id', models.AutoField(primary_key=True, serialize=False)),
                ('usn', models.TextField(blank=True, max_length=10)),
                ('dept', models.IntegerField(blank=True, default=1, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('ut_id', models.IntegerField(blank=True, default=1, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AttendRegister',
            fields=[
                ('arid', models.AutoField(primary_key=True, serialize=False)),
                ('a_datetime', models.DateTimeField(blank=True, default=datetime.datetime(2020, 2, 4, 11, 46, 42, 683226))),
            ],
        ),
        migrations.CreateModel(
            name='Dept',
            fields=[
                ('dept_id', models.IntegerField(primary_key=True, serialize=False)),
                ('dept_name', models.CharField(blank=True, default='dept_name', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('e_id', models.AutoField(primary_key=True, serialize=False)),
                ('e_state', models.BooleanField(default=True)),
                ('e_title', models.CharField(default='title', max_length=255)),
                ('e_date', models.DateField(blank=True, default=datetime.datetime.now, verbose_name='Event Date')),
                ('e_start_time', models.TimeField(default='12:00:00')),
                ('e_end_time', models.TimeField(blank=True, default='12:00:00', null=True)),
                ('e_venue', models.CharField(default='Venue', max_length=120)),
                ('e_description', models.TextField(blank=True)),
                ('e_score', models.IntegerField()),
                ('e_registration_link', models.CharField(blank=True, max_length=255, null=True)),
                ('e_photos_link', models.CharField(blank=True, max_length=255, null=True)),
                ('e_medium_link', models.CharField(blank=True, max_length=255, null=True)),
                ('e_code', models.CharField(blank=True, max_length=255, null=True)),
                ('e_organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterestGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('g_name', models.CharField(max_length=275, verbose_name='Group Name')),
                ('g_desc', models.CharField(max_length=400, verbose_name='Group Description')),
                ('g_img', models.ImageField(default='group/no-img.jpg', upload_to='images/group/')),
                ('g_tellink', models.CharField(max_length=225, verbose_name='Telegram Link')),
                ('g_medium', models.CharField(max_length=225, verbose_name='Medium Link')),
                ('g_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterestGroupMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ig_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.InterestGroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('n_id', models.IntegerField(primary_key=True, serialize=False)),
                ('n_title', models.CharField(default='title', max_length=255)),
                ('n_desc', models.CharField(default='title', max_length=500)),
                ('n_datetime', models.DateTimeField(blank=True, default=datetime.datetime(2020, 2, 4, 11, 46, 42, 683921))),
                ('n_image', models.ImageField(default='news/no-img.jpg', upload_to='images/news/')),
                ('n_link', models.CharField(blank=True, max_length=255)),
                ('n_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('p_id', models.AutoField(primary_key=True, serialize=False)),
                ('p_state', models.BooleanField(default=True)),
                ('p_title', models.CharField(default='title', max_length=200)),
                ('p_image', models.ImageField(default='projects/no-img.jpg', upload_to='images/projects/')),
                ('p_datetime', models.DateTimeField(blank=True, default=datetime.datetime(2020, 2, 4, 11, 46, 42, 684891))),
                ('p_desc', models.CharField(default='description', max_length=500)),
                ('p_medium_link', models.CharField(default='https://www.medium.com', max_length=250)),
                ('p_github_link', models.CharField(default='https://www.github.com', max_length=250)),
                ('p_apply_link', models.CharField(default='https://www.google.com', max_length=250)),
                ('u_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('ut_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ut_name', models.CharField(default='type', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserTypeRegister',
            fields=[
                ('ut_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ut_name', models.CharField(default='type', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Visioneer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100, verbose_name='First Name')),
                ('lastname', models.CharField(max_length=100, verbose_name='Last Name')),
                ('visioneerEmailAddress', models.EmailField(max_length=100, unique=True, verbose_name='username@visioneer.atria.edu')),
                ('password', models.CharField(max_length=100, verbose_name='Password')),
                ('passwordhashfunction', models.CharField(default='MD%', max_length=100)),
                ('orgunitpath', models.CharField(default='org', max_length=100)),
                ('recoveryemail', models.EmailField(max_length=100, verbose_name='Recovery Email')),
                ('recoveryphone', phone_field.models.PhoneField(blank=True, max_length=31, verbose_name='Phone Number')),
                ('homeaddress', models.CharField(max_length=100, verbose_name='Primary Address')),
                ('employeeid', models.CharField(max_length=100, verbose_name='USN')),
                ('departement', models.CharField(default='title', max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='attendregister',
            name='e_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Events'),
        ),
        migrations.AddField(
            model_name='attendregister',
            name='u_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
